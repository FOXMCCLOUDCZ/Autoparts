// <auto-generated />
using AutopartsRepository.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutopartsRepository.Migrations
{
    [DbContext(typeof(AutopartsDbContext))]
    partial class AutopartsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutopartsEntity.Catalog.Entities.Warranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Warranties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "6 měsíců"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "12 měsíců"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "24 měsíců"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "36 měsíců"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "48 měsíců"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = "13.11.2023",
                            IsActive = true,
                            Title = "60 měsíců"
                        });
                });

            modelBuilder.Entity("AutopartsEntity.ExtensionForUsers.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryNameCZ")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryNameENG")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("ISOAlpha2")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ISOAlpha3")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("NumericCountryCode")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryNameCZ = "Česká republika",
                            CountryNameENG = "Czech Republic",
                            CreateDate = "13.11.2023",
                            CurrencyId = 1,
                            ISOAlpha2 = "CZ",
                            ISOAlpha3 = "CZE",
                            IsActive = true,
                            NumericCountryCode = 203
                        },
                        new
                        {
                            Id = 2,
                            CountryNameCZ = "Slovenská republika",
                            CountryNameENG = "Slovakia",
                            CreateDate = "13.11.2023",
                            CurrencyId = 2,
                            ISOAlpha2 = "SK",
                            ISOAlpha3 = "SVK",
                            IsActive = true,
                            NumericCountryCode = 703
                        },
                        new
                        {
                            Id = 3,
                            CountryNameCZ = "Polsko",
                            CountryNameENG = "Poland",
                            CreateDate = "13.11.2023",
                            CurrencyId = 3,
                            ISOAlpha2 = "PL",
                            ISOAlpha3 = "POL",
                            IsActive = true,
                            NumericCountryCode = 616
                        },
                        new
                        {
                            Id = 4,
                            CountryNameCZ = "Německo",
                            CountryNameENG = "Germany",
                            CreateDate = "13.11.2023",
                            CurrencyId = 2,
                            ISOAlpha2 = "DE",
                            ISOAlpha3 = "DEU",
                            IsActive = true,
                            NumericCountryCode = 276
                        },
                        new
                        {
                            Id = 5,
                            CountryNameCZ = "Rakousko",
                            CountryNameENG = "Austria",
                            CreateDate = "13.11.2023",
                            CurrencyId = 2,
                            ISOAlpha2 = "AT",
                            ISOAlpha3 = "AUT",
                            IsActive = true,
                            NumericCountryCode = 40
                        });
                });

            modelBuilder.Entity("AutopartsEntity.ExtensionForUsers.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("NumericCurrencyCode")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = "13.11.2023",
                            CurrencyCode = "CZK",
                            CurrencyName = "Česká koruna",
                            IsActive = true,
                            NumericCurrencyCode = 203
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = "13.11.2023",
                            CurrencyCode = "EUR",
                            CurrencyName = "Euro",
                            IsActive = true,
                            NumericCurrencyCode = 978
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = "13.11.2023",
                            CurrencyCode = "PLN",
                            CurrencyName = "Złoty",
                            IsActive = true,
                            NumericCurrencyCode = 985
                        });
                });

            modelBuilder.Entity("AutopartsEntity.ExtensionForUsers.Entities.Country", b =>
                {
                    b.HasOne("AutopartsEntity.ExtensionForUsers.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
